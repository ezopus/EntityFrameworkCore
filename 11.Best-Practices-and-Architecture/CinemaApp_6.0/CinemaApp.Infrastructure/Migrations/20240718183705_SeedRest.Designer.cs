// <auto-generated />
using System;
using CinemaApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaApp.Infrastructure.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20240718183705_SeedRest")]
    partial class SeedRest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sofia, The Mall",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Sofia, Mega Mall",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Varna, Grand Mall",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Plovdiv, Markovo Tepe",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Kardzhali, Arena",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Smolyan, Arena",
                            Name = "Arena"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Sofia, Mall Sofia",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Sofia, Paradise Center",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Stara Zagora, Mall Galleria",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Burgas, Mall Galeria",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Plovdiv, Mall Plovdiv",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Rousse, Mall Rousse",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Sofia, Park Center",
                            Name = "Cine Grand"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Sofia, Ring Mall",
                            Name = "Cine Grand"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Sofia, Bulgaria Mall",
                            Name = "Cineland"
                        },
                        new
                        {
                            Id = 16,
                            Address = "Pernik, Mall Pernik",
                            Name = "Cineland"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Veliko Tarnovo, Iskra",
                            Name = "Cineland"
                        },
                        new
                        {
                            Id = 18,
                            Address = "Pleven, Central Mall",
                            Name = "Cineland"
                        },
                        new
                        {
                            Id = 19,
                            Address = "Targovishte, Cinemagic",
                            Name = "Cineland"
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.CinemaHall", b =>
                {
                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.HasKey("CinemaId", "HallId");

                    b.HasIndex("HallId");

                    b.ToTable("CinemaHall");

                    b.HasData(
                        new
                        {
                            CinemaId = 1,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 1,
                            HallId = 2
                        },
                        new
                        {
                            CinemaId = 1,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 1,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 1,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 2,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 2,
                            HallId = 2
                        },
                        new
                        {
                            CinemaId = 3,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 3,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 3,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 3,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 3,
                            HallId = 7
                        },
                        new
                        {
                            CinemaId = 4,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 4,
                            HallId = 2
                        },
                        new
                        {
                            CinemaId = 4,
                            HallId = 3
                        },
                        new
                        {
                            CinemaId = 4,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 4,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 5,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 5,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 6,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 6,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 6,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 7,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 7,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 7,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 7,
                            HallId = 7
                        },
                        new
                        {
                            CinemaId = 8,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 8,
                            HallId = 3
                        },
                        new
                        {
                            CinemaId = 8,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 8,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 9,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 9,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 9,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 10,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 10,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 10,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 11,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 11,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 11,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 11,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 12,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 12,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 12,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 12,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 13,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 13,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 13,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 13,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 14,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 14,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 14,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 14,
                            HallId = 6
                        },
                        new
                        {
                            CinemaId = 15,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 15,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 15,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 16,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 16,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 16,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 17,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 17,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 17,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 18,
                            HallId = 1
                        },
                        new
                        {
                            CinemaId = 18,
                            HallId = 2
                        },
                        new
                        {
                            CinemaId = 18,
                            HallId = 4
                        },
                        new
                        {
                            CinemaId = 18,
                            HallId = 5
                        },
                        new
                        {
                            CinemaId = 18,
                            HallId = 7
                        },
                        new
                        {
                            CinemaId = 19,
                            HallId = 1
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kids"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Luxury"
                        },
                        new
                        {
                            Id = 4,
                            Name = "3D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "IMAX/4DX"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Motion Controlled Seating"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Drive-In"
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "In 1980s Hollywood, adult film star and aspiring actress Maxine Minx finally gets her big break. But as a mysterious killer stalks the starlets of Hollywood, a trail of blood threatens to reveal her sinister past.",
                            Genre = 9,
                            Title = "MaXXXine"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Gru, Lucy, Margo, Edith, and Agnes welcome a new member to the family, Gru Jr., who is intent on tormenting his dad. Gru faces a new nemesis in Maxime Le Mal and his girlfriend Valentina, and the family is forced to go on the run.",
                            Genre = 1,
                            Title = "Despicable Me 4"
                        },
                        new
                        {
                            Id = 3,
                            Description = "After Garfield's unexpected reunion with his long-lost father, ragged alley cat Vic, he and his canine friend Odie are forced from their perfectly pampered lives to join Vic on a risky heist.",
                            Genre = 1,
                            Title = "The Garfield Movie"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A new adaptation of the famous novel by Alexandre Dumas.",
                            Genre = 4,
                            Title = "Le comte de Monte-Cristo"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Many years after the reign of Caesar, a young ape goes on a journey that will lead him to question everything he's been taught about the past and make choices that will define a future for apes and humans alike.",
                            Genre = 2,
                            Title = "Kingdom of the Planet of the Apes"
                        },
                        new
                        {
                            Id = 6,
                            Description = "This Summer, the world's favorite Bad Boys are back with their iconic mix of edge-of-your seat action and outrageous comedy but this time with a twist: Miami's finest are now on the run.",
                            Genre = 2,
                            Title = "Bad Boys: Ride or Die"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The true story of Donna and Reverend WC Martin and their church in East Texas, in which 22 families adopted 77 children from the local foster system, igniting a movement for vulnerable children everywhere.",
                            Genre = 4,
                            Title = "Sound of Hope: The Story of Possum Trot"
                        },
                        new
                        {
                            Id = 8,
                            Description = "A young woman named Sam finds herself trapped in New York City during the early stages of an invasion by alien creatures with ultra-sensitive hearing.",
                            Genre = 6,
                            Title = "A Quiet Place: Day One"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Marketing maven Kelly Jones wreaks havoc on launch director Cole Davis's already difficult task. When the White House deems the mission too important to fail, the countdown truly begins.",
                            Genre = 10,
                            Title = "Fly Me to the Moon"
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CinemaId = 1,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            HallId = 1,
                            MovieId = 1,
                            Start = new DateTime(2024, 7, 20, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CinemaId = 2,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            HallId = 1,
                            MovieId = 1,
                            Start = new DateTime(2024, 7, 20, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CinemaId = 3,
                            Duration = new TimeSpan(0, 1, 45, 0, 0),
                            HallId = 1,
                            MovieId = 2,
                            Start = new DateTime(2024, 7, 20, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CinemaId = 5,
                            Duration = new TimeSpan(0, 1, 30, 0, 0),
                            HallId = 1,
                            MovieId = 2,
                            Start = new DateTime(2024, 7, 21, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CinemaId = 6,
                            Duration = new TimeSpan(0, 2, 15, 0, 0),
                            HallId = 5,
                            MovieId = 3,
                            Start = new DateTime(2024, 7, 22, 18, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CinemaId = 11,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            HallId = 6,
                            MovieId = 3,
                            Start = new DateTime(2024, 7, 23, 19, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CinemaId = 15,
                            Duration = new TimeSpan(0, 1, 50, 0, 0),
                            HallId = 4,
                            MovieId = 3,
                            Start = new DateTime(2024, 7, 24, 20, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CinemaId = 19,
                            Duration = new TimeSpan(0, 2, 10, 0, 0),
                            HallId = 1,
                            MovieId = 1,
                            Start = new DateTime(2024, 7, 25, 21, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CinemaId = 17,
                            Duration = new TimeSpan(0, 1, 45, 0, 0),
                            HallId = 4,
                            MovieId = 9,
                            Start = new DateTime(2024, 7, 26, 22, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CinemaId = 18,
                            Duration = new TimeSpan(0, 2, 5, 0, 0),
                            HallId = 7,
                            MovieId = 8,
                            Start = new DateTime(2024, 7, 27, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CinemaId = 13,
                            Duration = new TimeSpan(0, 1, 45, 0, 0),
                            HallId = 6,
                            MovieId = 6,
                            Start = new DateTime(2024, 7, 28, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CinemaId = 10,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            HallId = 5,
                            MovieId = 5,
                            Start = new DateTime(2024, 7, 29, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CinemaId = 7,
                            Duration = new TimeSpan(0, 1, 45, 0, 0),
                            HallId = 7,
                            MovieId = 7,
                            Start = new DateTime(2024, 7, 30, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CinemaId = 4,
                            Duration = new TimeSpan(0, 2, 0, 0, 0),
                            HallId = 4,
                            MovieId = 4,
                            Start = new DateTime(2024, 7, 31, 18, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tariffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Factor = 1.0m,
                            Name = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Factor = 0.8m,
                            Name = "Student"
                        },
                        new
                        {
                            Id = 3,
                            Factor = 0.7m,
                            Name = "Senior"
                        },
                        new
                        {
                            Id = 4,
                            Factor = 0.5m,
                            Name = "Child"
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("money");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("SeatId");

                    b.HasIndex("TariffId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            LastName = "Smith",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Username = "alice_johnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Bob",
                            LastName = "Brown",
                            Username = "bob_brown"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Charlie",
                            LastName = "Davis",
                            Username = "charlie_davis"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "David",
                            LastName = "Wilson",
                            Username = "david_wilson"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Emma",
                            LastName = "Moore",
                            Username = "emma_moore"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Frank",
                            LastName = "Clark",
                            Username = "frank_clark"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Grace",
                            LastName = "Lee",
                            Username = "grace_lee"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Henry",
                            LastName = "White",
                            Username = "henry_white"
                        });
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.CinemaHall", b =>
                {
                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Cinema", "Cinema")
                        .WithMany("CinemaHalls")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Hall", "Hall")
                        .WithMany("CinemaHalls")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Schedule", b =>
                {
                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Cinema", "Cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Hall", "Hall")
                        .WithMany("Schedules")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Movie", "Movie")
                        .WithMany("Schedules")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Seat", b =>
                {
                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Ticket", b =>
                {
                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Schedule", "Schedule")
                        .WithMany("Tickets")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.Tariff", "Tariff")
                        .WithMany("Tickets")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CinemaApp.Infrastructure.Data.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Seat");

                    b.Navigation("Tariff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Cinema", b =>
                {
                    b.Navigation("CinemaHalls");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Hall", b =>
                {
                    b.Navigation("CinemaHalls");

                    b.Navigation("Schedules");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Movie", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Schedule", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.Tariff", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaApp.Infrastructure.Data.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
